<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ForgotPasswordConfirmMessage" xml:space="preserve">
    <value>Please check your email for instructions on how to reset your password.</value>
  </data>
  <data name="ForgotPasswordConfirmPageTitle" xml:space="preserve">
    <value>Forgot Password</value>
  </data>
  <data name="ForgotPasswordPageTitle" xml:space="preserve">
    <value>Forgot Password</value>
  </data>
  <data name="ForgotPasswordSubmitButton" xml:space="preserve">
    <value>Send Reset Email</value>
  </data>
  <data name="ForgotPasswordTitle" xml:space="preserve">
    <value>Please enter your email below.</value>
  </data>
  <data name="LoginErrorMessageAccountLocked" xml:space="preserve">
    <value>Your account is locked, Lock expires: {0}</value>
    <comment>{0} = expiry time</comment>
  </data>
  <data name="LoginErrorMessageAccountLockout" xml:space="preserve">
    <value>Your account has been locked for {0} hours due to {1} invalid logon attempts.</value>
    <comment>{0} = hours, {1} = invalid count</comment>
  </data>
  <data name="LoginErrorMessageEmailNotVerified" xml:space="preserve">
    <value>A verification email has been sent to your registered email address.</value>
  </data>
  <data name="LoginErrorMessageInvalidCaptcha" xml:space="preserve">
    <value>Invalid reCaptcha</value>
  </data>
  <data name="LoginErrorMessageInvalidEmailPassword" xml:space="preserve">
    <value>Email or password was invalid.</value>
  </data>
  <data name="LoginErrorMessageInvalidTwoFactor" xml:space="preserve">
    <value>Invalid code</value>
  </data>
  <data name="LoginForgotPasswordLink" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="LoginPageTitle" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LoginRegisterLink" xml:space="preserve">
    <value>Register as a new user</value>
  </data>
  <data name="LoginSubmitButton" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>Log in to your HiveFive account.</value>
  </data>
  <data name="RegisterConfirmMessage" xml:space="preserve">
    <value>Thank you for confirming your email. Please &lt;a href="/Account/Login"&gt;click here to Log in&lt;/a&gt;</value>
  </data>
  <data name="RegisterConfirmPageTitle" xml:space="preserve">
    <value>Email Confirmed</value>
  </data>
  <data name="RegisterErrorMessageConfirmEmailSendFail" xml:space="preserve">
    <value>Failed to send registration confirmation email, if problem persists please contact &lt;a class="support-link" href="/Support"&gt;Support&lt;/a&gt;</value>
  </data>
  <data name="RegisterErrorMessageEmailExists" xml:space="preserve">
    <value>Email '{0}' already in use, please try a new Email.</value>
    <comment>{0} = email address entered</comment>
  </data>
  <data name="RegisterErrorMessageUserNameExists" xml:space="preserve">
    <value>UserName '{0}' already exists, please try a new Username.</value>
    <comment>{0} = username entered</comment>
  </data>
  <data name="RegisterPageTitle" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterSubmitButton" xml:space="preserve">
    <value>Register Account</value>
  </data>
  <data name="RegisterSuccessMessage" xml:space="preserve">
    <value>An activation email has been sent to your registered email address, please click the link to activate your HiveFive account.</value>
  </data>
  <data name="RegisterSuccessPageTitle" xml:space="preserve">
    <value>Activate Email</value>
  </data>
  <data name="RegisterTitle" xml:space="preserve">
    <value>Create a new HiveFive account.</value>
  </data>
  <data name="ResetPasswordConfirmMessage" xml:space="preserve">
    <value>Your password has been reset. Please &lt;a href="/Account/Login"&gt;click here to log in&lt;/a&gt;</value>
  </data>
  <data name="ResetPasswordConfirmPageTitle" xml:space="preserve">
    <value>Password Reset</value>
  </data>
  <data name="ResetPasswordPageTitle" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="ResetPasswordSubmitButton" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="ResetPasswordTitle" xml:space="preserve">
    <value>Reset your password.</value>
  </data>
  <data name="ResetTwoFactorCodePlaceholder" xml:space="preserve">
    <value>XXX-XXX-XXX</value>
  </data>
  <data name="ResetTwoFactorErrorMessageInvalidCode" xml:space="preserve">
    <value>Invalid Recovery Code</value>
  </data>
  <data name="ResetTwoFactorPageTitle" xml:space="preserve">
    <value>Reset TwoFactor</value>
  </data>
  <data name="ResetTwoFactorSubmitButton" xml:space="preserve">
    <value>Reset TwoFactor</value>
  </data>
  <data name="ResetTwoFactorTitle" xml:space="preserve">
    <value>Reset your TwoFactor.</value>
  </data>
  <data name="ValidationErrorMessageInvalidEmail" xml:space="preserve">
    <value>Invalid email address</value>
  </data>
  <data name="ValidationErrorMessageInvalidPasswordCompare" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="ValidationErrorMessageInvalidPasswordLength" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="ValidationErrorMessageInvalidRecoveryCode" xml:space="preserve">
    <value>Invalid Recovery Code</value>
  </data>
  <data name="ValidationErrorMessageInvalidUserName" xml:space="preserve">
    <value>UserName can only contain letters, digits and underscore</value>
  </data>
  <data name="ValidationErrorMessageRequiredEmail" xml:space="preserve">
    <value>Email Address is required</value>
  </data>
  <data name="ValidationErrorMessageRequiredOldPassword" xml:space="preserve">
    <value>Current password is required</value>
  </data>
  <data name="ValidationErrorMessageRequiredPassword" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="ValidationErrorMessageRequiredRecoveryCode" xml:space="preserve">
    <value>Recovery Code is Required</value>
  </data>
  <data name="ValidationErrorMessageRequiredSecurityCode" xml:space="preserve">
    <value>Security code is required</value>
  </data>
  <data name="ValidationErrorMessageRequiredUserName" xml:space="preserve">
    <value>UserName is required</value>
  </data>
  <data name="ValidationErrorMessageSecurityCodeExpired" xml:space="preserve">
    <value>Security code invalid or has expired</value>
  </data>
  <data name="ValidationErrorMessageSecurityCodeNumOnly" xml:space="preserve">
    <value>Security code must be between 4 and 8 digits</value>
  </data>
  <data name="VerifyTwoFactorEmailPlaceholder" xml:space="preserve">
    <value>Email Code</value>
  </data>
  <data name="VerifyTwoFactorOtpPlaceholder" xml:space="preserve">
    <value>Authenticator Code</value>
  </data>
  <data name="VerifyTwoFactorPageTitle" xml:space="preserve">
    <value>Verify TwoFactor</value>
  </data>
  <data name="VerifyTwoFactorPinPlaceholder" xml:space="preserve">
    <value>Pin Code</value>
  </data>
  <data name="VerifyTwoFactorSubmitButton" xml:space="preserve">
    <value>Verify Code</value>
  </data>
  <data name="VerifyTwoFactorTitle" xml:space="preserve">
    <value>Please enter your TwoFactor details below.</value>
  </data>
</root>